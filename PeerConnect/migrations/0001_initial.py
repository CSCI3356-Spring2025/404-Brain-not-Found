# Generated by Django 5.1.6 on 2025-04-08 22:27

import datetime
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='PredefinedQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('available_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('due_date', models.DateTimeField(default=datetime.datetime(2025, 4, 15, 22, 26, 59, 851520, tzinfo=datetime.timezone.utc))),
                ('self_assessment', models.BooleanField(default=False)),
                ('num_questions', models.PositiveIntegerField(default=0)),
                ('published', models.BooleanField(default=False)),
                ('course', models.ManyToManyField(related_name='assessments', to='PeerConnect.course')),
                ('predefined_questions', models.ManyToManyField(blank=True, to='PeerConnect.predefinedquestion')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('order', models.PositiveIntegerField()),
                ('question_type', models.CharField(choices=[('open', 'Open-Ended'), ('likert', 'Likert Scale')], default='open', max_length=10)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='PeerConnect.assessment')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='PeerConnect.course')),
            ],
        ),
        migrations.AddField(
            model_name='assessment',
            name='team',
            field=models.ManyToManyField(blank=True, related_name='assessments', to='PeerConnect.team'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_student', models.BooleanField(default=True)),
                ('is_professor', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='team',
            name='members',
            field=models.ManyToManyField(limit_choices_to={'is_student': True}, related_name='teams', to='PeerConnect.userprofile'),
        ),
        migrations.CreateModel(
            name='QuestionResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField(blank=True, null=True)),
                ('answer_likert', models.IntegerField(blank=True, null=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='PeerConnect.assessment')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='PeerConnect.question')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='PeerConnect.userprofile')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='professor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses_taught', to='PeerConnect.userprofile'),
        ),
        migrations.AddField(
            model_name='course',
            name='students',
            field=models.ManyToManyField(limit_choices_to={'is_student': True}, related_name='courses_enrolled', to='PeerConnect.userprofile'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='professor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments_created', to='PeerConnect.userprofile'),
        ),
    ]
