# Generated by Django 5.1.7 on 2025-04-28 14:21

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('available_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('due_date', models.DateTimeField(default=datetime.datetime(2025, 5, 5, 0, 10, 19, 972740, tzinfo=datetime.timezone.utc))),
                ('self_assessment', models.BooleanField(default=False)),
                ('num_questions', models.PositiveIntegerField(default=0)),
                ('published', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('year', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2100)])),
                ('semester', models.CharField(blank=True, choices=[('spring', 'Spring'), ('fall', 'Fall'), ('summer', 'Summer')], max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PredefinedQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='CourseInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('accepted', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='PeerConnect.course')),
            ],
        ),
        migrations.CreateModel(
            name='ProfessorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='professor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses_taught', to='PeerConnect.professorprofile'),
        ),
        migrations.CreateModel(
            name='Assessment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('available_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('due_date', models.DateTimeField(default=datetime.datetime(2025, 5, 2, 14, 35, 45, 778906, tzinfo=datetime.timezone.utc))),
                ('self_assessment', models.BooleanField(default=False)),
                ('num_questions', models.PositiveIntegerField(default=0)),
                ('published', models.BooleanField(default=False)),
                ('course', models.ManyToManyField(related_name='assessments', to='PeerConnect.course')),
                ('predefined_questions', models.ManyToManyField(blank=True, to='PeerConnect.predefinedquestion')),
                ('professor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments_created', to='PeerConnect.professorprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('order', models.PositiveIntegerField()),
                ('question_type', models.CharField(choices=[('open', 'Open-Ended'), ('likert', 'Likert Scale')], default='open', max_length=10)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='PeerConnect.assessment')),
            ],
        ),
        migrations.CreateModel(
            name='StudentProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_student', models.BooleanField(default=True)),
                ('is_professor', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to='PeerConnect.course')),
                ('members', models.ManyToManyField(related_name='teams', to='PeerConnect.studentprofile')),
            ],
        ),
        migrations.CreateModel(
            name='QuestionResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answer_text', models.TextField(blank=True, null=True)),
                ('answer_likert', models.IntegerField(blank=True, null=True)),
                ('assessment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='PeerConnect.assessment')),
                ('evaluated_student', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='evaluations_received', to='PeerConnect.studentprofile')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='PeerConnect.question')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='PeerConnect.studentprofile')),
            ],
        ),
        migrations.CreateModel(
            name='ProfessorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CourseInvitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('accepted', models.BooleanField(default=False)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='invitations', to='PeerConnect.course')),
            ],
        ),
        migrations.AddField(
            model_name='course',
            name='professor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses_taught', to='PeerConnect.professorprofile'),
        ),
        migrations.AddField(
            model_name='course',
            name='students',
            field=models.ManyToManyField(related_name='courses_enrolled', to='PeerConnect.studentprofile'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='course',
            field=models.ManyToManyField(related_name='assessments', to='PeerConnect.course'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='predefined_questions',
            field=models.ManyToManyField(blank=True, to='PeerConnect.predefinedquestion'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='professor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assessments_created', to='PeerConnect.professorprofile'),
        ),
        migrations.AddField(
            model_name='assessment',
            name='team',
            field=models.ManyToManyField(blank=True, related_name='assessments', to='PeerConnect.team'),
        ),
    ]
